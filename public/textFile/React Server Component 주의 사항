⛔주의사항
1. 서버 컴포넌트에는 브라우저에서 실행될 코드가 포함되면 안된다.(ex useEffect)

2. 클라이언트 컴포넌트는 클라이언트에서만 실행되지 않는다.(use client 지시자 상단에 표기하면 됨.)
ㄴ 서버 컴포넌트 : 서버측에서만 실행되는 컴포넌트
ㄴ 클라이언트 컴포넌트 : 클라이언트에서만 실행되는 컴포넌트??? NOPE
ㄴㄴ 일반적인 컴포넌트이며
ㄴㄴ 1. 사전 렌더링을 위한 서버에서 1번 실행
ㄴㄴ 2. 하이드레이션을 위해 브라우저에서 1번 실행
= 서버와 클라이언트에서 모두 실행됨.

3. 클라이언트 컴포넌트에서 서버 컴포넌트를 import 할 수 없다.
ㄴ 참조 : 주의사항-3번 이미지.png
ㄴ 클라이언트 컴포넌트는 브라우저에서 하이드레이션을 위해서 한 번 더 실행하게 되는데 이때 서버 컴포넌트는 존재하지 않으므로 오류 발생.
ㄴ 🚨오류발생(굉장히 많이 발생됨.)
ㄴㄴ 🚨하지만 Nextjs에서 알아서 서버 컴포넌트를 클라이언트 컴포넌트로 변경해줌 오류 방지(그닥 좋은 상황 아님)
ㄴㄴ 이런 클라이언트 컴포넌트에서 서버컴포넌트를 렌더링 하는 방식은 최대한 피하는게 맞다.

4. 서버 컴포넌트에서 클라이언트 컴포넌트에게 직렬화 되지 않는 Props는 전달 불가하다.
직렬화(Serialization)
- 객체, 배열, 클래스 등의 복잡한 구조의 데이터를 네트워크 상으로 전송하기 위해 아주 
단순한 형태(문자열, Byte)로 변환하는 것.
[Before]
const person ={
    name : "kokoko",
    age: 29
}

[After]
{"name":"kokoko", age:29}

🚨단, 함수는 직렬화가 불가능하다.
ㄴ 서버 컴포넌트에서 클라이어튼 컴포넌트로 향하는 Props가 될 수 없다는 뜻.

서버컴포넌트 실행
ㄴ 브라우저로부터 접속 요청을 받아 사전 렌더링을 진행할 때 이때 클라이언트 컴포넌트와 함께 실행된다.
ㄴ 페이지를 구성하는 모든 컴포넌트들로 완성된 HTML 페이지를 생성하게 된다.