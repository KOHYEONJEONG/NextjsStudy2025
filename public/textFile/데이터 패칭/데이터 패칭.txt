페이지 라우터 방식(참고만)

1. SSR (서버 사이드 렌더링)
export async function getServerSideProps() {
    return {props: {...}}
}

2. SSR(정적 사이트 생성)
export async function getStaticProps() {
    return {props:{...}}
}

3. Dynamic SSG(동적 경로에 대한 정적 사이트 생성)
export async function getStaticPaths(){
    return {paths: [...], callback:...}
}

오직 서버측에서만 사용되는 함수 
ㄴ 페이지 라우터 방식은 위 함수를 사용해야 했지만

⛔앱 라우터 버전에서는 서버컴포넌트 도입으로 
async  키워드만 붙여주면 됨

----------------------------
⏬⏬⏬(이 아래부터 보면 됨.)

핵심 : 서버 컴포넌트는 오직 서버에서만 실행됨을 알고 가자.(+ 브라우저에서 실행되지 않는다.)


클라이언트 컴포넌트에는 async 키워드를 사용할 수 없었음.
: 브라우저에서 동작시 문제를 일으킬 수 있기 때문에 권장하지 않음.
: 비동기 함수로 설정할 수 없었다.

그런데

🍒서버 컴포넌트에서는 비동기함수로 사용할 수 있다. (서버컴포넌트 + 비동기 함수)
export default 🍒async function Page(props){
    const data = await fetch('...');
    return <div>...</div>;
}
ㄴ 기존의 getServerSideProps / getStaticPaths ...를 대체!!


데이터 패칭(in App Router)
- Nextjs공삭문서 발췌
- fetching data wehere it's needed
= ⭐데이터는 필요한 곳에서 직접 불러와라

---------------------------------------------