풀 라우트 캐시(Full Route Cache)
- 🚨페이지 캐싱 기능 - 페이지들이 이렇게 빌드 타임에 정적으로 미리 생성이 되어서 풀라우트 캐시에 보관이 되는건지 확인해보자)
- Next 서버측에서 빌드 타임에 특정 페이지의 렌더링 결과를 캐싱하는 기능
ex) /a 라는 주소를 갖는 페이지가 풀라우트 캐시에 저장이 되는 그러한 

2가지로 나뉜다.
1. 정적 페이지 : 풀 라우트 캐시가 적용됨.
2. 동적 페이지

Dynamic Page로 설정되는 기준(🚨빌드타임에 생성되지 않기에 풀 라우트 캐시에 저장이 되지 않는다 +  조금 느린 속도로 응답된다.)
"브라우저로부터 특정 페이지가 접속 요청을 받을 때 마다 매번 변화가 생기거나, 데이터가 달라질 경우"
1. 캐시되지 않는 Data Fetching을 사용할 경우(캐시 옵션이 존재하지 않을경우 또는 옵션중 no store)
2. 동적 함수(쿠키, 헤더, 쿼리스트링)을 사용하는 컴펀트가 있을 때
ㄴ 요청에 따라 자주 변화할 수 있는 기능을 빼오는 행위
3. 🚩그렇다면 절대 사용하면 안되는 페이지인가? 안티패턴인가? '아니다.'
ㄴ ex1 . 서치 페이지인경우 무조건 쿼리스트링(동적함수 이용)을 사용해야 한다.
ㄴ ex2 . 현재 사용자의 인증 정보를 확인하기 위해서 쿠키 값을 조회해야한다던지.
ㄴㄴㄴ 되도록이면 static page로 설정하는게 낫지만 이런 다이나믹 페이지라고 항상 엄청나게 느리거나 엄청나게 안좋은것까지는 아니다.
=> 데이터 캐시와 리퀘스트 메모이션은 다이나믹 페이지도 사용하기 때문이다.(풀라이트 캐시 뺴고!)

🚩Static Page로 설정되는 기준
1. Dynamic Page가 아니면 무조건 모든 페이지가 Static Page가 된다.(Default)
ㄴ 무조건 동적함수가 없어야 한다, 데이터 캐시는 있어도 상관없다.
=> 풀라우트 캐시(즉 페이지 캐싱이 제공된다.) 사용

페이지 캐싱
- 빌드 타임에 해당하는 페이지를 생성한 

revalidate 옵션
- Page Router에 ISR과 비슷
- 빌드타임에 생성되느